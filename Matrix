# include  < iostream >

// додаткова бібліотека
# include  < time.h >

использование  пространства имен  std ;

int  main ()
{
	// генератор випадкових чисел
	srand (( без знака ) время ( NULL ));
	setlocale (LC_ALL, " .1251 " );
	система ( « цвет 1F » );

	// розмири матрицi
	int A [ 100 ] [ 100 ];
	int n, k, i;
	char z;

	n = 5 ;
	int a = - 99 ;
	int b = 99 ;

	делать
	{
		система ( " cls " );
		printf ( " \ n \ t Заповнення матрици A [% 2i] [% 2i] цiлими двозначними числами. \ n \ n " , n, n);

		для (k = 0 ; k <n; k ++)
		{
			cout << " \ t " ;
			для (i = 0 ; i <n; i ++)
			{
				делать
				{
					A [k] [i] = a + rand ()% (b - a + 1 );
				} while ( abs (A [k] [i]) < 10 || abs (A [k] [i])> 99 );
				printf ( " % 5i " , A [k] [i]);
			}
			cout << " \ n " ;
		}
		// Виведення на екран копії матриці
		printf ( " \ n \ n \ t Виведення на экран копий матриц: \ n \ n " );





		int poz, neg, sum, max, min, B [ 100 ], Петрович;
		длинный док;
		poz = neg = sum = p = min = 0 ;
		для ( int J = 0 ; J <n; J ++) B [J] = 0 ;
		доб = 1 ;



		для (k = 0 ; k <n; k ++)
		{
			cout << " \ t " ;
			для (i = 0 ; i <n; i ++) {
				if (k! = p) printf ( " % 5i " , A [k] [i]);
				еще {
				printf ( "     * " );
				B [p] = A [k] [i];
				
				if (B [Petrovich]> 0 ) {

					ПОЗ ++;
					сумма + = B [p];
				}
				еще {

					нег ++;
					доб * = В [p];


				}
Петрович ++;
}
			}
			cout << " \ n " ;
		}

		max = B [ 0 ]; min = B [ 0 ];
		для ( int j = 0 ; j < 5 ; j ++)
		{
			if (B [j]> max) max = B [j];
			если (B [j] <мин) min = B [j];
		}
			printf ( " \ n \ n \ t Додатних:% i " , poz);
			printf ( " \ n \ t Вiд`ємних:% i " , neg);
			printf ( " \ n \ t Сума додатних:% i " , сумма);
			printf ( " \ n \ t Добуток вiд`ємних:% i " , доб)
			printf ( " \ n \ t Найбiльший елемент:% i " , не более);
			printf ( " \ n \ t Найменший елемент:% i " , не более);

		cout << " \ n \ n \ t Продовжити (да / нет)? " ;
		cin >> z;
	} while (z! = ' n ' );

	cout << endl << endl << " \ t " ;
	// system ("пауза");
	вернуть  0 ;
}
